Return-Path: <evolution-hackers-admin@lists.ximian.com>
X-Flags: 0000
Delivered-To: GMX delivery to fdietz@gmx.de
Received: (qmail 17640 invoked by uid 65534); 3 Oct 2003 11:13:10 -0000
Received: from headcheese.ximian.com (EHLO listsmx.ximian.com) (141.154.95.15)
  by mx0.gmx.net (mx021-rz3) with SMTP; 03 Oct 2003 13:13:10 +0200
Received: from headcheese.ximian.com (localhost [127.0.0.1])
	by listsmx.ximian.com (Postfix) with ESMTP
	id A15531240AE; Fri,  3 Oct 2003 07:13:04 -0400 (EDT)
Received: by listsmx.ximian.com (Postfix, from userid 38)
	id 966B4124088; Fri,  3 Oct 2003 07:12:52 -0400 (EDT)
Received: from peabody.ximian.com (peabody.ximian.com [141.154.95.10])
	by listsmx.ximian.com (Postfix) with ESMTP id 69EB012405E
	for <evolution-hackers@lists.ximian.com>; Fri,  3 Oct 2003 07:12:41 -0400 (EDT)
Received: (qmail 13180 invoked from network); 3 Oct 2003 11:12:41 -0000
Received: from localhost (HELO thomas) (michael@127.0.0.1)
  by localhost with SMTP; 3 Oct 2003 11:12:41 -0000
From: Michael Meeks <michael@ximian.com>
To: Dan Winship <danw@ximian.com>
Cc: evolution-hackers@lists.ximian.com
In-Reply-To: <1065117607.5166.5.camel@twelve-monkeys.boston.ximian.com>
References: <1064580536.25599.2.camel@monster.koto.lan>
	 <1064599252.2938.4.camel@mentor.gurulabs.com>
	 <1064601760.1648.12.camel@localhost.localdomain>
	 <1064869320.4696.72.camel@milkplus>
	 <1064923711.21650.1001.camel@michael.home>
	 <1064944766.28349.5.camel@twelve-monkeys.boston.ximian.com>
	 <1064988000.30419.13.camel@michael.home>
	 <1065117607.5166.5.camel@twelve-monkeys.boston.ximian.com>
Content-Type: text/plain
Organization: Ximian.
Message-Id: <1065178995.27924.187.camel@michael.home>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.4.5 
Content-Transfer-Encoding: 7bit
X-Spam-Status: No, hits=-31.8 required=5.0
	tests=EMAIL_ATTRIBUTION,IN_REP_TO,QUOTED_EMAIL_TEXT,
	      RCVD_IN_OSIRUSOFT_COM,REFERENCES,REPLY_WITH_QUOTES,
	      USER_AGENT_XIMIAN
	version=2.53
X-Spam-Checker-Version: SpamAssassin 2.53 (1.174.2.15-2003-03-30-exp)
Subject: [Evolution-hackers] evo / ORBit2 oddness ...
Sender: evolution-hackers-admin@lists.ximian.com
Errors-To: evolution-hackers-admin@lists.ximian.com
X-BeenThere: evolution-hackers@lists.ximian.com
X-Mailman-Version: 2.0.13
Precedence: bulk
List-Help: <mailto:evolution-hackers-request@lists.ximian.com?subject=help>
List-Post: <mailto:evolution-hackers@lists.ximian.com>
List-Subscribe: <http://lists.ximian.com/mailman/listinfo/evolution-hackers>,
	<mailto:evolution-hackers-request@lists.ximian.com?subject=subscribe>
List-Id: People writing code for Evolution <evolution-hackers.lists.ximian.com>
List-Unsubscribe: <http://lists.ximian.com/mailman/listinfo/evolution-hackers>,
	<mailto:evolution-hackers-request@lists.ximian.com?subject=unsubscribe>
List-Archive: <http://lists.ximian.com/archives/public/evolution-hackers/>
Date: Fri, 03 Oct 2003 12:03:16 +0100
X-GMX-Antivirus: -1 (not scanned, may not use virus scanner)
X-GMX-Antispam: 0 (Mail was not recognized as spam)

Hi Dan,

On Thu, 2003-10-02 at 19:00, Dan Winship wrote:
> OK, got a new one, CVS ORBit2 from yesterday or so. Looks like the stack
> may be a little trashed...

	Ok - so I'll look at this; but I'm still chasing two other bugs: the
strange listener problem that Ettore was having, and also your g_error
on exit bug.

	I added a regression test to libbonobo to try and repeat what I assumed
was a trivial bug; however - the servant finalize being run on a
non-destroyed object works perfectly well - since we hold GObject refs
on each facet of the aggregate until destroy time so your case can only
happen in two circumstances:

	a) someone calls 'exit' from a BonoboObject finalize override,
	   and the stock ORB g_atexit cleans the object - this seems
	   to be slightly unlikely.

	b) somewhere, someone is screwing up and doing a g_object_unref
	   on a BonoboObject.

	Situation b) _could_ possibly result in Ettore's problem, although
perhaps it's unlikely; I can only generate the warning:

Bonobo-ERROR **: g_object_unreffing a bonobo_object that still has 1
refs
aborting...
Trace/breakpoint trap (core dumped)

	by doing:

       /* Deliberately leak */
        object = g_object_new (bonobo_moniker_get_type(), NULL);
        g_object_unref (object);

        /* Deliberately don't do a debug shutdown - we leak */
        return 0;

	which is clearly broken.

	I grokked the source for potential problems here with no luck though;
any ideas ?

	Regards,

		Michael.

-- 
 michael@ximian.com  <><, Pseudo Engineer, itinerant idiot

_______________________________________________
evolution-hackers maillist  -  evolution-hackers@lists.ximian.com
http://lists.ximian.com/mailman/listinfo/evolution-hackers

