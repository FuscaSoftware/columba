Return-Path: <gnome-multimedia-admin@gnome.org>
X-Flags: 0000
Delivered-To: GMX delivery to fdietz@gmx.de
Received: (qmail 4224 invoked by uid 65534); 6 Oct 2003 15:01:22 -0000
Received: from moniker.gnome.org (EHLO mail.gnome.org) (67.72.78.218)
  by mx0.gmx.net (mx012) with SMTP; 06 Oct 2003 17:01:22 +0200
Received: from moniker.gnome.org (moniker.gnome.org [127.0.0.1])
	by mail.gnome.org (Postfix) with ESMTP
	id 6B763189ED; Mon,  6 Oct 2003 11:01:05 -0400 (EDT)
Delivered-To: gnome-multimedia@gnome.org
Received: from rzaixsrv2.rrz.uni-hamburg.de (rzaixsrv2.rrz.uni-hamburg.de [134.100.32.71])
	by mail.gnome.org (Postfix) with ESMTP id 912B71840D
	for <gnome-multimedia@gnome.org>; Tue, 23 Sep 2003 11:53:56 -0400 (EDT)
Received: from rzaixsrv6.rrz.uni-hamburg.de (rzaixsrv6.rrz.uni-hamburg.de [134.100.32.73])
	by rzaixsrv2.rrz.uni-hamburg.de (8.12.10/8.12.9) with ESMTP id h8NFs6mS042462
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Tue, 23 Sep 2003 17:54:06 +0200
Received: (from http@localhost)
	by rzaixsrv6.rrz.uni-hamburg.de (8.12.9/8.12.9/Submit) id h8NFs6Ov010600;
	Tue, 23 Sep 2003 17:54:06 +0200
Received: from panoramix.lhsystems.com (panoramix.lhsystems.com [193.24.32.36]) 
	by rzaixsrv6.rrz.uni-hamburg.de (IMP) with HTTP 
	for <in7y118@public.uni-hamburg.de>; Tue, 23 Sep 2003 17:54:06 +0200
Message-ID: <1064332446.3f706c9e4c0ae@rzaixsrv6.rrz.uni-hamburg.de>
From: in7y118@public.uni-hamburg.de
To: Thomas Vander Stichele <thomas@apestaart.org>
Cc: gnome-multimedia <gnome-multimedia@gnome.org>,
	gstreamer-devel <gstreamer-devel@lists.sourceforge.net>
Subject: Re: [gst-devel] error handling in GStreamer
References: <1063735565.31250.78.camel@ana.onshuis>
In-Reply-To: <1063735565.31250.78.camel@ana.onshuis>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
User-Agent: Internet Messaging Program (IMP) 3.2
Sender: gnome-multimedia-admin@gnome.org
Errors-To: gnome-multimedia-admin@gnome.org
X-BeenThere: gnome-multimedia@gnome.org
X-Loop: gnome-multimedia@gnome.org
X-Mailman-Version: 2.0.12
Precedence: bulk
List-Help: <mailto:gnome-multimedia-request@gnome.org?subject=help>
List-Post: <mailto:gnome-multimedia@gnome.org>
List-Subscribe: <http://mail.gnome.org/mailman/listinfo/gnome-multimedia>,
	<mailto:gnome-multimedia-request@gnome.org?subject=subscribe>
List-Id: GNOME Multimedia development <gnome-multimedia.gnome.org>
List-Unsubscribe: <http://mail.gnome.org/mailman/listinfo/gnome-multimedia>,
	<mailto:gnome-multimedia-request@gnome.org?subject=unsubscribe>
List-Archive: <http://mail.gnome.org/archives/gnome-multimedia/>
Date: Tue, 23 Sep 2003 17:54:06 +0200
X-GMX-Antivirus: -1 (not scanned, may not use virus scanner)
X-GMX-Antispam: 0 (Mail was not recognized as spam)

Quoting Thomas Vander Stichele <thomas@apestaart.org>:

> f) make a patch set that is largely applicable to stable and head at the
> same time
> 
I'm really interested how big the part is that works for both branches :)

> some things to consider here:
> a) we can provide functions that map the very specific finegrained enums
> to coarse enum domains (ie, all device errors could map to one class).
> 
Let's take a look at GTK and use the same model. Both models sound useful. We 
might even want to ask in #gtk+ about this.

> b) we need to decide on whether or not we want plug-ins to be able to
> provide custom translated messages.  If there is a direct one-to-one
> mapping between enums and error strings, this is not really necessary. 
> If the enum would be coarse-grained (ie, only apply to a domain, like
> GST_ERROR_DEVICE), then the element needs to be able to give more
> specific data.
>
I want that. (see above)

> c) who knows best what went wrong, the element or the app ? A good
> example to question is this:
>   - if a plugin gives the translatable string, then it can pass along
> what resource failed, ie which file was not found.  if an app does it,
> it can know what resource it wanted to access, and thus provide a more
> human way for the resource, ie "Could not listen to URGent radio"
> instead of "could not open URL http://cleo.rug.ac.be:8000/mix"
> 
Well, an application is free to change an error if it knows better (like in 
your example). Just as in GTK where you are free to make "could not load icon 
image" out of GDKs "invalid image data" out of GDK-pixbufs "invalid byte 
sequence" (that was invented, but you get the idea).
This shouldn't free us from the burden of providing a useful error though. And 
we might want to add errors in an update, when the app is not updated and would 
not know what to say then.

> d) my current idea is that it should work like this:
>   - use the API just shown (with the two strings)
>   - the plugin decides to either:
>     - provide a specific translatable UI string for this error
>     or
>     - use NULL as this string
>   - the application connects to the signal, and chooses to
>     - based on the enum, work around the problem somehow (try another
> device, another file, ...)
>     - if it does show the error, it checks if the translated string is
> NULL or not
>       if NULL, either show the generic error for this or show it's own
> translated string for it
>       if non-NULL, show the error passed along
>     - behind the advanced button, the debug output can be shown
> 
The translated error cannot be NULL, because it's inside a GError and GErrors 
require a non-NULL string. And I don't think it makes sense to allow "I'm too 
lazy to translate" NULL strings either.


Benjamin
_______________________________________________
gnome-multimedia mailing list
gnome-multimedia@gnome.org
http://mail.gnome.org/mailman/listinfo/gnome-multimedia

